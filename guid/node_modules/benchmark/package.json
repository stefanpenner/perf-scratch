{
  "name": "benchmark",
  "version": "1.0.0",
  "description": "A benchmarking library that works on nearly all JavaScript platforms, supports high-resolution timers, and returns statistically significant results.",
  "homepage": "http://benchmarkjs.com/",
  "license": "MIT",
  "main": "benchmark.js",
  "keywords": [
    "benchmark",
    "performance",
    "speed"
  ],
  "author": {
    "name": "Mathias Bynens",
    "email": "mathias@qiwi.be",
    "url": "http://mathiasbynens.be/"
  },
  "contributors": [
    {
      "name": "Mathias Bynens",
      "email": "mathias@qiwi.be",
      "url": "http://mathiasbynens.be/"
    },
    {
      "name": "John-David Dalton",
      "email": "john.david.dalton@gmail.com",
      "url": "http://allyoucanleet.com/"
    },
    {
      "name": "Kit Cambridge",
      "email": "github@kitcambridge.be",
      "url": "http://kitcambridge.be/"
    }
  ],
  "bugs": {
    "url": "https://github.com/bestiejs/benchmark.js/issues"
  },
  "repository": {
    "type": "git",
    "url": "bestiejs/benchmark.js"
  },
  "scripts": {
    "test": "echo \"See the repository CONTRIBUTING.md for testing instructions.\""
  },
  "dependencies": {
    "lodash": "~2.4.1",
    "platform": "~1.1.0"
  },
  "engines": [
    "node",
    "rhino"
  ],
  "files": [
    "LICENSE.txt",
    "benchmark.js"
  ],
  "readme": "# Benchmark.js <sup>v1.0.0</sup>\n\nA [robust](http://calendar.perfplanet.com/2010/bulletproof-javascript-benchmarks/ \"Bulletproof JavaScript benchmarks\") benchmarking library that works on nearly all JavaScript platforms<sup><a name=\"fnref1\" href=\"#fn1\">1</a></sup>, supports high-resolution timers, and returns statistically significant results. As seen on [jsPerf](http://jsperf.com/).\n\n## Download\n\n * [Development source](https://raw.github.com/bestiejs/benchmark.js/v1.0.0/benchmark.js)\n\n## Dive in\n\nWe’ve got [API docs](http://benchmarkjs.com/docs) and [unit tests](http://benchmarkjs.com/tests).\n\nFor a list of upcoming features, check out our [roadmap](https://github.com/bestiejs/benchmark.js/wiki/Roadmap).\n\n## Support\n\nTested in Chrome 34-35, Firefox 28-29, IE 6-11, Opera 20-21, Safari 5-7, Node.js 0.6.21~0.10.28, Narwhal 0.3.2, PhantomJS 1.9.2, RingoJS 0.9, & Rhino 1.7RC5.\n\n## Installation and usage\n\nBenchmark.js’ only hard dependency is [Lo-Dash](http://lodash.com/).\nInclude [platform.js](http://mths.be/platform) to populate [Benchmark.platform](http://benchmarkjs.com/docs#platform).\n\nIn a browser:\n\n```html\n<script src=\"lodash.js\"></script>\n<script src=\"platform.js\"></script>\n<script src=\"benchmark.js\"></script>\n```\n\nOptionally, expose Java’s nanosecond timer by adding the `nano` applet to the `<body>`:\n\n```html\n<applet code=\"nano\" archive=\"nano.jar\"></applet>\n```\n\nOr enable Chrome’s microsecond timer by using the [command line switch](http://peter.sh/experiments/chromium-command-line-switches/#enable-benchmarking):\n\n    --enable-benchmarking\n\nVia [npm](http://npmjs.org/):\n\n```bash\nnpm install benchmark\n```\n\nIn [Node.js](http://nodejs.org/) and [RingoJS v0.8.0+](http://ringojs.org/):\n\n```js\nvar Benchmark = require('benchmark');\n```\n\nOptionally, use the [microtime module](https://github.com/wadey/node-microtime) by Wade Simmons:\n\n```bash\nnpm install microtime\n```\n\nIn [RingoJS v0.7.0-](http://ringojs.org/):\n\n```js\nvar Benchmark = require('benchmark').Benchmark;\n```\n\nIn [Rhino](http://www.mozilla.org/rhino/):\n\n```js\nload('benchmark.js');\n```\n\nIn an AMD loader like [RequireJS](http://requirejs.org/):\n\n```js\nrequire({\n  'paths': {\n    'benchmark': 'path/to/benchmark',\n    'lodash': 'path/to/lodash',\n    'platform': 'path/to/platform'\n  }\n},\n['benchmark'], function(Benchmark) {\n  console.log(Benchmark.platform.name);\n});\n```\n\nUsage example:\n\n```js\nvar suite = new Benchmark.Suite;\n\n// add tests\nsuite.add('RegExp#test', function() {\n  /o/.test('Hello World!');\n})\n.add('String#indexOf', function() {\n  'Hello World!'.indexOf('o') > -1;\n})\n// add listeners\n.on('cycle', function(event) {\n  console.log(String(event.target));\n})\n.on('complete', function() {\n  console.log('Fastest is ' + this.filter('fastest').pluck('name'));\n})\n// run async\n.run({ 'async': true });\n\n// logs:\n// > RegExp#test x 4,161,532 +-0.99% (59 cycles)\n// > String#indexOf x 6,139,623 +-1.00% (131 cycles)\n// > Fastest is String#indexOf\n```\n\n## BestieJS\n\nBenchmark.js is part of the BestieJS *\"Best in Class\"* module collection. This means we promote solid browser/environment support, ES5+ precedents, unit testing, and plenty of documentation.\n\n## Authors\n\n| [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") | [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](https://twitter.com/jdalton \"Follow @jdalton on Twitter\") |\n|---|---|\n| [Mathias Bynens](http://mathiasbynens.be/) | [John-David Dalton](http://allyoucanleet.com/) |\n\n## Contributors\n\n| [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge \"Follow @kitcambridge on Twitter\") |\n|---|\n| [Kit Cambridge](http://kitcambridge.be/) |\n",
  "readmeFilename": "README.md",
  "_id": "benchmark@1.0.0",
  "_from": "benchmark@"
}
